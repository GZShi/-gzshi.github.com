---
layout: post
title: "判断闰年"
date: 2012-10-09 14:47
comments: true
categories: 
---
[闰年](http://zh.wikipedia.org/zh/%E9%97%B0%E5%B9%B4)这个概念大概是小学刚学除法的时候接触的吧，记得比较清楚的是“闰年都能被4整除”。大一的时候学C语言的时候又接触到闰年，判断方法说的很清楚
>“四年一闰，百年不闰，四百年再闰”

没有想到的是，在今天早上的华为机试中又遇到了这个闰年！

题目很简单，就是要你判断输入的数是否是闰年，是就输出"YES"，不是就输出"NO"。
<!--more -->
为了这次上机测试，我特意查了下华为前几年的上机测试题，虽然不是很难，但也不会简单到这个样子，而且以前都不止一道题，码代码的时间也不止30分钟（当然，这个题30分钟的时间显得太充裕了），昨晚还没睡好，看了好多面试题目……看到这个题目我第一想法就是——大坑！

本来想用一个条件语句判断的，但是头脑一热就懒得想这么多了，直接上if-else
{% gist 3857116 %}
测试了几个例子，测试正确后便很满足地提交了。但是提交后发现检查结果有5%的测试样例没通过，刚刚还信心满满的我一下子就被打击到了，再三检查了程序的逻辑，实在找不出有什么逻辑方面的错误。

走出软件园，实在是很郁闷，路上一直想着刚刚的程序，一直在想那5%的错误是怎么出现的。突然想到他给的样例是用字符串保存输入的而非整型，莫非测试的时候用了一个非常大的数导致整型溢出出现错误，想到这里我发现我的程序里面却是没有想到这点。回来后我又重新写了一个
{% gist 3857174 %}
真是再简单的事情也有意想不到的情况。

PS. 机试的地点真是太难找了，标个记！  
<p><iframe src="http://www.dr2ooo.com/tools/maps/maps.php?zoom=12&width=500&height=400&ll=30.475123,114.404669&ctrl=true&cp=true&" width="500" height="400"></iframe></p>  