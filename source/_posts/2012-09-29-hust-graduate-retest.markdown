---
layout: post
title: "2009级华中科技大学计算机保研C语言上机题目"
date: 2012-09-29 13:45
comments: true
categories: 
---
在某种基友光环的作用下，我这个找工作的苦逼也有机会看到今年的华科保研的c语言上机题目。完全是无聊时间多了没事干闲的不行才写了几行代码。

###第一题

* 某加密算法对数据字节进行加密，具体算法为：  
1.对字节的8位二进制位从右向左0~7编号，先将0、2、4位分别于1、3、5位两两对应交换  
2.然后对0~5位进行循环左移（左边移出的位接到右边），循环左移的位数由6、7两位所组成的二进制数的值决定
编写程序，输入一行明文字符串，按上述算法进行加密后输出密文。  
例如，输入：`abcd↙`，则输出：`dbfp↙`
<!-- more -->
看到题目后一眼就看出是要考`>>`、`<<`、`&`、`|`什么的，不算是太难吧。我的代码如下：
{% gist 3803322 %}

###第二题

* 八张扑克牌叠放在桌面上，从上到下牌面一次为2、3、4、5、6、7、8、9。输入三个整数，每读入一个整数n，先按n进行切牌，然后洗牌，接着读入下一个整数n，如此进行3轮切牌和洗牌。每轮切牌和洗牌后，按从上到下次序输出八张扑克牌的牌面。  
**切牌规则**：  
1.若整数`n>0`且`n<8`，则将排从上向下数第n张牌下面的所有牌移到整堆排的最上面；  
2.否则，不移动任何牌。  
**切牌规则**：  
1.从上向下数，将第5~8四张牌按顺序插入到1~4张排下面。  

例如，输入：`2 3 4↙`，则输出：
```
round 1: 48596273
round 2: 93642875
round 3: 29837654
```

题目好长，叙述也好乱，看了好几分钟才理清楚切牌洗牌什么的。如果硬要找一下这个题的考点，我猜是数组吧……用字符数组可以很方便地“切牌”，我的代码如下：
{% gist 3803759 %}

###第三题
* 编写一个程序，按给定的条件，对所输入的每行表达式进行求值，然后输出结果。假设有如下声明语句：
`int a = 1, b = 2, c = 3, d = 4, e = 5;`
待求值的表达式通过键盘输入，每行输入一个表达式，长度小于20个字符，输入一个空行来结束处理。  
所输入的表达式应满足c语言语法规定，其中包括：变量名a~e，十进制整型常量，圆括号，及双目运算符  
1.算数运算符：`*`、`/`、`%`、`+`、`-`  
2.位运算符：`<<`、`>>`、`&`、`^`、`|`  
3.简单赋值运算符：`=`  
除上述成分外，表达式中不含其他字符。运算符的功能以及**优先级**和**结合性**遵循**c标准**。

看到这个题第一反应时编译原理，但细细一想，上机时间也就2个小时，要实现一个简单解释器时间还是挺紧的。仔细看了题目，发现题目给出的条件都很严格。例如，输入的式子是正确的，因此不必检查式子的正确性，只需按优先级结合性把结果算出来就行了。  
我最先的想法是先不考虑括号，用一个数组A来存放a、b、c、d、e这几个变量的值，用一个字符串s存放整个算式。先找出整个算式中优先级最高的运算符，然后把这个运算符左右两边的变量或整数取出，记作子串sub，把sub的结果计算出来，转成字符串，再替换sub串之前在s中的位置。如果该运算符是`=`，则更新数组的值，将新的值转成字符串。这样一直循环处理字符串，直到式子中没有运算符或变量为止。  
如果考虑括号，则遇到括号时，对括号中的子串进行上述处理，得到一个不能再被计算的结果字符串，然后用这个结果字符串替换之前子串的位置，再进行一下上面的分析。  
计算过程可以用递归的方式实现，代码在200行左右。  
我的代码如下，支持赋值运算的版本还有点bug，我就不贴出来了。拍砖的轻点……     
{% gist 3803883 %}
上面的方法比较好理解，但是效率不高。后来在[天下无双、史上最牛逼的丁大神](http://dingstyle.me)的提醒下又想到了其他的一些方法。  
构造一个栈，然后将输入的中缀表达式转换成**逆波兰表达式**，逆波兰式就很容易编程求解了。  
或者用这个表达式构造一棵**二叉树**。对这棵树进行化简即可的倒结果。